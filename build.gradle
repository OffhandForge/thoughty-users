plugins {
    id 'com.github.ben-manes.versions' version '0.52.0' // https://github.com/ben-manes/gradle-versions-plugin
    id 'groovy'
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.biezbardis'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    mockitoAgent {
        transitive = false
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Lombok
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    // JJWT
    implementation 'io.jsonwebtoken:jjwt-api:0.13.0'
    implementation 'io.jsonwebtoken:jjwt-impl:0.13.0'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.13.0'
    // Spring
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.10'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    // Groovy
    implementation 'org.apache.groovy:groovy'
    // Database
    implementation 'org.postgresql:postgresql:42.7.7'
    // Test
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.13.4'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.13.4'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.13.4'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation "org.testcontainers:postgresql:1.21.3"
    testImplementation 'com.redis:testcontainers-redis:2.2.4'
    testImplementation 'org.mockito:mockito-core:5.19.0'
    mockitoAgent 'org.mockito:mockito-core:5.19.0'
    // Support tools
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'
    implementation 'org.apache.commons:commons-lang3:3.18.0'
}

tasks.named('test') {
    useJUnitPlatform()
    doFirst {
        jvmArgs([
                "-XX:+EnableDynamicAgentLoading",
                "-Xshare:off",
                "-javaagent:${configurations.mockitoAgent.asPath}",
        ])
    }
}

// https://github.com/ben-manes/gradle-versions-plugin
def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

tasks.named("dependencyUpdates").configure {
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}
