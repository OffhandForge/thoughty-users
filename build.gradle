plugins {
    alias(libs.plugins.benmanes)
    alias(libs.plugins.groovy)
    alias(libs.plugins.java)
    alias(libs.plugins.spring.boot)
    alias(libs.plugins.spring.dependency.management)
}

group = 'com.biezbardis'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    mockitoAgent {
        transitive = false
    }
}

configurations.configureEach {
    resolutionStrategy {
        eachDependency { DependencyResolveDetails details ->
            if (details.requested.group == 'org.junit') {
                details.useVersion "5.13.4"
            }
            if (details.requested.group == 'org.junit.platform') {
                details.useVersion( "1.13.4")
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Lombok
    annotationProcessor libs.lombok
    compileOnly libs.lombok
    // JJWT
    implementation libs.bundles.jjwt
    // Spring
    implementation libs.bundles.spring
    developmentOnly libs.spring.boot.docker.compose
    // Groovy
    implementation libs.groovy
    // Database
    runtimeOnly libs.postgresql
    // Liquibase
    implementation libs.liquibase
    // Test
    testImplementation platform(libs.junit.bom)
    testRuntimeOnly libs.junit.platform.launcher
    testImplementation libs.bundles.tests
    mockitoAgent libs.mockito
    // Support tools
    implementation libs.jaxb
    implementation libs.commons.lang3
}

tasks.named('test') {
    useJUnitPlatform()
    doFirst {
        jvmArgs([
                "-XX:+EnableDynamicAgentLoading",
                "-Xshare:off",
                "-javaagent:${configurations.mockitoAgent.asPath}",
        ])
    }
}

// https://github.com/ben-manes/gradle-versions-plugin
def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

tasks.named("dependencyUpdates").configure {
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}
